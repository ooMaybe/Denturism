/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.karam.dentistry.schedules;

import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Karam
 */
public class Calender extends javax.swing.JPanel {

    /**
     * Creates new form Calender
     */
    
    private java.util.Calendar calendar;
    private int year;
    private int month;
    private int day;
    
    private String selectedButton;
    
    public Calender() {
        initComponents();
        calendar = Calendar.getInstance();
        calendar.setTime(new Date());
        year = calendar.get(Calendar.YEAR);
        month = calendar.get(Calendar.MONTH);
        day = calendar.get(Calendar.DAY_OF_MONTH);
        selectedButton = "Month";
        
        calendarTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        format();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        calendarTable = new javax.swing.JTable();
        nextLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        todayButton = new javax.swing.JButton();
        weekButton = new javax.swing.JButton();
        monthButton = new javax.swing.JButton();

        calendarTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        calendarTable.setAlignmentY(0.0F);
        calendarTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        calendarTable.setCellSelectionEnabled(true);
        calendarTable.setRowHeight(50);
        calendarTable.setShowGrid(true);
        calendarTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(calendarTable);
        calendarTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (calendarTable.getColumnModel().getColumnCount() > 0) {
            calendarTable.getColumnModel().getColumn(0).setResizable(false);
            calendarTable.getColumnModel().getColumn(1).setResizable(false);
            calendarTable.getColumnModel().getColumn(2).setResizable(false);
            calendarTable.getColumnModel().getColumn(3).setResizable(false);
            calendarTable.getColumnModel().getColumn(4).setResizable(false);
            calendarTable.getColumnModel().getColumn(5).setResizable(false);
            calendarTable.getColumnModel().getColumn(6).setResizable(false);
        }

        nextLabel.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        nextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        dateLabel.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        dateLabel.setText("MONTH - YEAR");

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karam/dentistry/images/arrow.png"))); // NOI18N
        backButton.setAlignmentX(0.5F);
        backButton.setMargin(new java.awt.Insets(1, 1, 1, 1));
        backButton.setMaximumSize(new java.awt.Dimension(28, 28));
        backButton.setMinimumSize(new java.awt.Dimension(28, 28));
        backButton.setPreferredSize(new java.awt.Dimension(28, 28));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/karam/dentistry/images/right_arrow.png"))); // NOI18N
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });

        todayButton.setBackground(new java.awt.Color(150, 50, 100));
        todayButton.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        todayButton.setForeground(java.awt.Color.white);
        todayButton.setText("TODAY");
        todayButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                todayButtonMouseClicked(evt);
            }
        });

        weekButton.setBackground(new java.awt.Color(150, 50, 100));
        weekButton.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        weekButton.setForeground(java.awt.Color.white);
        weekButton.setText("WEEK");
        weekButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                weekButtonMouseClicked(evt);
            }
        });

        monthButton.setBackground(new java.awt.Color(60, 30, 30));
        monthButton.setFont(new java.awt.Font("Tw Cen MT", 1, 12)); // NOI18N
        monthButton.setForeground(java.awt.Color.white);
        monthButton.setText("MONTH");
        monthButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monthButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 12, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(todayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weekButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(monthButton)
                        .addGap(128, 128, 128)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(nextLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(todayButton)
                                .addComponent(weekButton)
                                .addComponent(monthButton))
                            .addComponent(dateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
        if (selectedButton.equals("Today")){
            day += 1;
        }else if (selectedButton.equals("Week")){
            day += 7;
        }else if (selectedButton.equals("Month")){
            month += 1;
        }
        format();
    }//GEN-LAST:event_nextButtonMouseClicked

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
       month -= 1;
       format();
    }//GEN-LAST:event_backButtonMouseClicked

   
    private void todayButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayButtonMouseClicked
        selectedButton = "Today";
        updateButtons();
    }//GEN-LAST:event_todayButtonMouseClicked

    private void weekButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_weekButtonMouseClicked
        selectedButton = "Week";
        updateButtons();
    }//GEN-LAST:event_weekButtonMouseClicked

    private void monthButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthButtonMouseClicked
        selectedButton = "Month";
        updateButtons();
    }//GEN-LAST:event_monthButtonMouseClicked

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void updateButtons(){
        Color unselected = new Color(150,50,100);
        Color selected = new Color(60,30,30);
        
        todayButton.setBackground(selectedButton.equals("Today") ? selected : unselected);
        weekButton.setBackground(selectedButton.equals("Week") ? selected : unselected);
        monthButton.setBackground(selectedButton.equals("Month") ? selected : unselected);
        
        // TODO: update calenders from here aswell
        format();
    }
    
    public void format(){
        Calendar calendar = Calendar.getInstance();
        DefaultTableModel model = (DefaultTableModel) calendarTable.getModel();

        switch(selectedButton){
            case "Month":
                calendar.set(Calendar.YEAR, year);
                calendar.set(Calendar.MONTH, month);

                int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);
                int daysInMonth = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);

                calendar.set(Calendar.DATE, dayOfWeek);
                SimpleDateFormat sdf = new SimpleDateFormat("MMMM-YYYY");
                dateLabel.setText(sdf.format(calendar.getTime()));   

                model.setRowCount(6); // clearing the table
                calendarTable.setRowHeight(50);
                int dayCounter = 1;

                /*
                looping through the table with rows and columns
                */
                for (int row = 0; row < 5; row++) {
                    for (int column = 0; column < 7; column++) {
                        if (row == 0 && column < dayOfWeek - 1) {
                            model.setValueAt("", row, column);
                        } else if (dayCounter <= daysInMonth) {
                            model.setValueAt("<html>"+dayCounter + "<br> <p style='background:red;border-radius:8px'>Chakorn's Appointment</p></html>", row, column);
                            dayCounter++;
                        } else {
                            // TODO: add next days of next month but make sure to count how much empty space is left.
                            model.setValueAt("", row, column);
                        }
                    }
                }
                break;
            case "Week":
                calendarTable.setRowHeight(300);
                
                model.setRowCount(1);
                break;
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTable calendarTable;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton monthButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel nextLabel;
    private javax.swing.JButton todayButton;
    private javax.swing.JButton weekButton;
    // End of variables declaration//GEN-END:variables
}
